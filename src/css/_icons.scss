// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if function-exists("selector-append") {
    @return unquote("\"\\#{$character-code}\"");
  }

  @return str-slice("\x", 1, 1) + $character-code;
}

$icon-font-family: videojs-record;

@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAWMAAsAAAAACXgAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAPAAAAFY6l0dPY21hcAAAAYAAAABuAAAB0gII9fJnbHlmAAAB8AAAAXAAAAKM37w3ImhlYWQAAANgAAAALQAAADYQhPRcaGhlYQAAA5AAAAAWAAAAJABhADpobXR4AAADqAAAAA4AAAAkAYAAAGxvY2EAAAO4AAAAFAAAABQCyANEbWF4cAAAA8wAAAAfAAAAIAEWADxuYW1lAAAD7AAAATYAAAJemUJQLnBvc3QAAAUkAAAAZwAAAJqAYqN0eJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGTQZpzAwMrAwCDHoAgk2aC0OAMTAw8DkGBlZsAKAtJcUxgcPjJ+5GAwAHJZwCQDAyOIAADEcwVleJztkdENhEAIRN+6uBJjKX5cQfdlBdf6VuAxYBmSvJkwIXwAsAI9OAODdtFQfSNtmXf2zI1Pzpjy6fcd2qTRW+oSsxYbBxseweCtI/X3dK6bFXnFpUDeC31jWqG7zrXQp+YokG8Fci/wP+mYF+0AAHicXVLtboMwDLQTkyDEqm4FirStqgDRbv3YBIT+mLb3f6ydoe2kJXA4jmyfz5AhXSd6p5o+iC71rvZ15V45K744nDn0WdGNQOfzvhu/eWh95qoWxtgV+d5JKs5gLcRJ5CLgQk9GDJ5W8ClhsRcbRVY8z46lhsQKqM4Th3dqaAUGYWgPfGOgFdehYi6ZJ4ifvVqZgo8Lmvm3dKSUtoieKc7hl2zBFVqosw33eR+6Hw6lEV0PFlyttc4K3kxMCr+Cs5ExuHHiPQ7X/J/0Bm4v9/w3gn2NtLtQOT9ewnqv/Wynzj4LVSWJU2MydQBEvBibGPF07/mEnSJrtWBwBL/hzGWURFGSKByvX8BfTINtEdPndVqWTUl6mnIdKQbHN9zpzFSF8DfLG/GdhyTDD3cbhjxP6F5FcHfqTlQTeBTKSSL7OA9tHuXmegegW+0POsBa0Vr/oLy//Kvq69C3y6U0mmOGpkqhyYvagC2kpV9BHifXeJxjYGRgYADilsX8S+P5bb4ycDMYAEUYbsyObkSmgaK6QJKDgQnEAQATMQi9AAAAeJxjYGRgYDBgYEAiGRlQAScADnEAnAAAeJxjYAACA/wYABmkAYEAAAAAAAAAQgBgAJAAvADWAOIBIAFGeJxjYGRgYOBkMGBgZgABJiDmAkIGhv9gPgMADjIBUwB4nH2QP2rDMBjFn/OvNIZSKO2UQVDoUmInGUPnBDpmyO7YsmNjW0ZWArlBD9IT9BAde5Ceoi+qlmSwBNLvve99n0AA7vEND+fl4c6e59XDDdU/90mPjgfkZ8dD+Jg7HtF/czzGK94d+3jAgRO8wS2dCT4c95j/dNyn/+V4QP5xPMQTfh2PMPHgeIytN3Hs48XTxzyRqminWsZKJxuZHcroyrxUW6nbXNViHswuC2tZSx0ZmYjdSbTHbGFMKlKtKrFStZFlqUSjVSFjE+yNaZZhmDo/iFWFI3IkkFAo0GIKTY6pNN0NOeNflIiou5JdtS1Z082pawj+f4BZZ8eaXNuuCIZ3wq4dTjxb9mVY0DVIqVNmFCrSyk4/p0tuRaextcLONXxzb7saLBFyp1f5wL5e/QF7nXD2AAB4nH3LOw6EMAyEYQ8sZHlU3COHshJLpGAdmcD5QUSi3Km+KX5q6P8GNGjxQYceDl8MGMnx6bPYNp4pilbyEVPltAcT+T2eTYJa9HthK9N7NM951aI+8CbGS06hHCY+3VUl0QVo4iTfAA==) format('woff');
  font-weight: normal;
  font-style: normal;
}

// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
$icons: (
          av-perm: 'f101',
          video-perm: 'f102',
          audio-perm: 'f103',
          screen-perm: 'f104',
          record-start: 'f105',
          record-stop: 'f106',
          photo-camera: 'f107',
          picture-in-picture: 'f108',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\25b6"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}
